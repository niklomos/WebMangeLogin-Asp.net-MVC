@model AccessModel



<div class="container  mt-3 ">
   
    <form asp-controller="Home" asp-action="UpdateProAccInDB" method="POST">
        <div class="card ">
            <div class="card-header  bg-lightblue">
                <h2 class="text-center">Profile</h2>
            </div>
            <div class="card-body">
                <div class="mb-3 d-none">
                    <label for="Id" class="form-label">Id</label>
                    <input type="text" class="form-control" id="LogId" name="LogId" value="@Model.Logins.LogId">
                </div>
                <div class="mb-3">
                    <label for="Username" class="form-label">Username</label>
                    <input type="text" class="form-control" id="Username" name="Username" value="@Model.Logins.Username" readonly>
                </div>
                <div class="mb-3">
                    <label for="Password" class="form-label">Password</label>
                    <input type="text" class="form-control" id="Password" name="Password" value="@Model.Logins.Password" readonly>
                </div>

                <div class="input-group mb-3">
                    <a class="text-primary toggle-form"><i class="fa-solid fa-circle-chevron-down me-1"></i></a>
                </div>
                <div class="toggleable ">
                <table class="table table-hover">
                    <thead class="table-dark t">
                        <tr class="text-center">
                            <th>ProgramName</th>
                            <th class="d-none">Confirm</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Programs)
                        {
                            <tr class="text-center">
                                <td>
                                    @item.PgName
                                </td>
                                <td class="d-none">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="PgId_@item.PgId" name="PgId[]" value="@item.PgId">
                                    </div>
                                </td>
                                <td>
                                    @foreach (var access in Model.Accesss.Where(a => a.PgId == item.PgId && a.LogId == Model.Logins.LogId))
                                    {
                                        <div class="form-check form-switch">
                                            @{
                                                string isChecked = access.AccStatus == "1" ? "checked" : "";
                                            }
                                            <input class="form-check-input acc-status-checkbox" type="checkbox" id="AccStatus_@access.AccId" name="AccStatus[]" value="1" @isChecked>
                                        </div>
                                    }
                                    @if (!Model.Accesss.Any(a => a.PgId == item.PgId && a.LogId == Model.Logins.LogId))
                                    {
                                        <div class="form-check form-switch">
                                            <input class="form-check-input acc-status-checkbox" type="checkbox" id="AccStatus_@item.PgId" name="AccStatus[]" value="1">
                                        </div>
                                    }
                                    @if (Model.Accesss.Any(a => a.PgId == item.PgId && a.LogId == Model.Logins.LogId))
                                    {
                                        <script>
                                            $(document).ready(function () {
                                                $('#PgId_@item.PgId').prop('checked', true);
                                            });
                                        </script>
                                    }
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
                </div>
                <button type="submit" class="btn btn-primary mt-3">Update</button>
            </div>
        </div>
    </form>
</div>

<!---Script----!>


<!-- เรียกใช้ JavaScript หลังจาก HTML ถูกโหลดเสร็จสมบูรณ์ -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // เมื่อมีการเปลี่ยนแปลงใน checkbox ของ accStatus
        $('.acc-status-checkbox').change(function () {
            // ตรวจสอบว่า checkbox มีการเลือกหรือไม่
            var isChecked = $(this).prop("checked");
            // หาแถว (row) ที่มี checkbox ของ accStatus ที่เป็นตำแหน่งของ checkbox ที่เปลี่ยนแปลง
            var row = $(this).closest("tr");
            // หา checkbox ของ pgId ในแถวนั้น ๆ
            var pgIdCheckbox = row.find('input[name="PgId[]"]');
            // กำหนดสถานะ checked ของ checkbox ของ pgId ตามค่าของ checkbox ของ accStatus
            pgIdCheckbox.prop("checked", isChecked);
        });
    });
</script>


@* Start check active before updat  &&  ajax get message from method  *@
<script>
    $(document).ready(function () {
        // ตัวแปรเพื่อตรวจสอบว่ามีการแก้ไขข้อมูลหรือไม่
        var isModified = false;

        // ตัวฟังก์ชันสำหรับตรวจจับการเปลี่ยนแปลงใน input fields
        $('form :input').on('input', function () {
            isModified = true;
        });

        // เมื่อฟอร์มถูกส่ง
        $('form').submit(function (event) {
            event.preventDefault();
            var form = $(this);

            // ตรวจสอบว่ามีการแก้ไขข้อมูลหรือไม่
            if (!isModified) {
                // ถ้าไม่มีการแก้ไข แสดงออลเลิร์ท
                Swal.fire({
                    icon: 'warning',
                    title: 'Warning',
                    text: 'No changes detected. Please make some changes before updating.'
                });
                return; // ไม่อนุญาตให้ฟอร์มถูกส่ง
            }

            // ถ้ามีการแก้ไข ดำเนินการส่งข้อมูลด้วย AJAX
            $.ajax({
                url: form.attr('action'),
                method: form.attr('method'),
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        // ถ้าสำเร็จ แสดงออลเลิร์ทเตือน
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: response.message
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '@Url.Action("Summary", "Home")';
                            }
                        });
                    } else {
                        // ถ้าเกิดข้อผิดพลาด แสดงออลเลิร์ทเตือน
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function () {
                    // ถ้าเกิดข้อผิดพลาดในการส่งข้อมูล แสดงออลเลิร์ทเตือน
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while processing your request.'
                    });
                }
            });
        });
    });

</script>
@* End  check active before updat  &&  ajax get message from method  *@




@* Start togger program*@
<script>
    $(document).ready(function () {
        $(".toggle-form").click(function () {
            $(".toggleable").toggle(500);
        });
    });
</script>
@* End togger program*@
